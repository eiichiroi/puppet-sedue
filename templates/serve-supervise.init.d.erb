#!/bin/bash
# to support chkconfig on RedHat Enterprise Linux
# chkconfig: 345 90 10
# description: Daemon Manager of Sedue

SEDUE_HOME=<%= sedue_home %>
INSTANCE_NAME=<%= instance %>

. $SEDUE_HOME/sedue-env.sh

KICKSTART="$SEDUE_HOME/bin/serve-kickstart"
SERVLIST="$SEDUE_HOME/bin/serve-list"
SUPERVISE="$SEDUE_HOME/bin/serve-supervise-$INSTANCE_NAME"
SERVDIR="$SEDUE_HOME/etc/serve/$INSTANCE_NAME/"

get_processes() {
    pid_list=""

    # loop through all 'serve-supervise' processes
    for pid in `pgrep -f $SUPERVISE`
    do
        # identify only the ones that are monitoring the target Sedue cluster
        if [ `ls -l /proc/$pid/fd | grep $SERVDIR | wc -l` -gt 0 ]; then
            if [ "$pid_list" = "" ]; then
                pid_list=$pid
            else
                pid_list="$pid_list $pid"
            fi
        fi
    done
}

start() {
    echo "Starting serve-supervise..."
    $KICKSTART -s $SERVDIR -c $SUPERVISE
    RETVAL=$?
    if [ $RETVAL -ne 0 ]; then
        echo "ERROR: Failed to launch serve-supervise"
        exit 1
    fi
}

stop() {
    echo "Stopping serve-supervise..."

    can_stop=1
    ORG_IFS=$IFS
    IFS=$'\n'
    for i in `$SERVLIST $SERVDIR`; do
        if [[ $i =~ "pid=0" ]]; then
            echo "a" > /dev/null
        else
            can_stop=0
        fi
    done
    IFS=$ORG_IFS
    if [[ $can_stop != 1 ]]; then
        echo "ERROR: some processes are alive. cannot terminate supervise.\n"
        $SERVLIST $SERVDIR
        exit 1
    fi

    get_processes

    if [ "$pid_list" != "" ]; then
        for pid in $pid_list; do
            kill -9 $pid
        done

        sleep 5

        for pid in $pid_list; do
            kill -0 $pid > /dev/null 2>&1
            if [ $? -eq 0 ]; then
                err=y
                pgrep -f -l $SUPERVISE | grep $pid
            fi
        done

        if [ "$err" = "y" ]; then
            echo "ERROR: Failed to stop serve-supervise processes above"
            exit 1
        fi
    else
        echo "serve-supervise already stopped."
    fi
}

status() {
    get_processes

    if [ "$pid_list" != "" ]; then
        echo "Following serve-supervise processes are running";
        echo $pid_list
        exit 0
    else
        echo "serve-supervise is stopped."
        exit 3
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        stop
        start
        ;;
    status)
        status
        ;;
    *)
echo "Usage: serve-supervise {start|stop|restart|status}"
        exit 1
esac
